{"version":3,"sources":["./node_modules/stencil-chat/dist/esm/s-adam-chat.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAC1C;AAC0F;;AAE/G,sFAAsF,qBAAqB,0BAA0B,iBAAiB,WAAW,6BAA6B,yBAAyB,aAAa,kBAAkB,oBAAoB,YAAY,gBAAgB,kBAAkB,QAAQ,mCAAmC,2BAA2B,WAAW,qBAAqB,kBAAkB,YAAY,0BAA0B,yBAAyB;;AAE/e;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,wBAAwB,EAAE,4DAAC,eAAe,4DAAC,SAAS,qBAAqB,EAAE,4DAAC,SAAS,eAAe,EAAE,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,qBAAqB,wDAAwD,mDAAI,EAAE,IAAI,4DAAC,SAAS,iBAAiB,4CAA4C,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,aAAa,gBAAgB;AACzY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAC,mBAAmB;AAC5C;AACA,qBAAqB,yEAAyE,mDAAW,EAAE;AAC3G;AACA,uBAAuB,4DAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,kBAAkB,4HAA4H,mDAAO,iBAAiB;AACxN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAC,oBAAoB;AACzC;AACA,iBAAiB,WAAW,mDAAO,cAAc,mDAAU,mDAAmD;AAC9G;AACA;AACA,oBAAoB,4DAAC,qBAAqB,0BAA0B,mDAAQ,uEAAuE;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoC","file":"stencil-s-adam-chat-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, h } from './index-53235049.js';\nimport './index.mjs';\nimport { l as logo, M as MessageMock, d as dialogs, c as categories, b as contacts } from './mock-8ce3ba60.js';\n\nconst sAdamChatCss = \".col-1.sc-s-adam-chat,.col.sc-s-adam-chat,.col-3.sc-s-adam-chat{padding:0 !important}.container.sc-s-adam-chat{max-width:1280px;width:100%}.main-wrapper.sc-s-adam-chat{background-color:#ebeff6;height:100vh;position:relative}main.sc-s-adam-chat{height:95vh;overflow:hidden;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:100%}.chat.sc-s-adam-chat{position:relative;height:95vh}.white-col.sc-s-adam-chat{background-color:#fdfdfd}\";\n\nconst SAdamChat = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         *Стейт для переключения на личный чат\n         */\n        this.dialogVisible = \"noChat\";\n        /**\n         * Стейт для показа профиля пользователя\n         */\n        this.profileVisible = false;\n        /**\n         * Стейт для показа контактов или диалогов\n         */\n        this.contactsVisible = true;\n    }\n    render() {\n        return (h(\"div\", { class: \"main-wrapper\" }, h(\"main\", null, h(\"div\", { class: \"container\" }, h(\"div\", { class: \"row\" }, h(\"div\", { class: \"col-1 white-col\" }, h(\"s-adam-navigate\", { onVisibleContacts: () => this.visibleContacts(), logo: logo })), h(\"div\", { class: \"col-3\" }, this.showContacts(this.contactsVisible)), h(\"div\", { class: \"col white-col\" }, h(\"section\", { class: \"chat\" }, this.showChat(this.dialogVisible))), this.showProfile(this.profileVisible))))));\n    }\n    /**\n     * Метод, который выводит необходимый чат\n     * @param content\n     */\n    showChat(content) {\n        switch (content) {\n            case \"showChat\":\n                return (h(\"s-adam-direct\", { onVisibleUserProfile: () => {\n                        this.visibleProfile();\n                    }, onSearchPersonalMessage: () => this.searchPersonalMessages(), message: MessageMock }));\n            case \"noChat\":\n                return h(\"s-adam-no-chat\", null);\n            //Компонент с версткой копирования\n            // <s-adam-copying></s-adam-copying>\n        }\n    }\n    showProfile(item) {\n        if (item === true) {\n            return (h(\"div\", { class: \"col-3\" }, h(\"user-folders\", { onClickToUserProfile: () => this.clickOnUserProfile(), onCreateFolder: (e) => this.createFolderHandler(e.detail), dialogs: dialogs, theme: \"comp\" })));\n        }\n        else {\n            return \"\";\n        }\n    }\n    createFolderHandler(item) {\n        console.log(\"createFolderHandler\", item);\n    }\n    /**\n     * Показать контакты или диалоги\n     * @param item\n     */\n    showContacts(item) {\n        if (item === true) {\n            return (h(\"s-adam-dialogs\", { onSearchDialogs: () => this.searchDialogs(), onClickToDialog: () => {\n                    this.toggleChat();\n                }, dialogs: dialogs, categories: categories, onClickToCategory: () => this.clickToCategory() }));\n        }\n        else {\n            return (h(\"s-adam-contacts\", { theme: \"comp\", contacts: contacts, disableInnerSearchContactState: this.disableInnerSearchContactState }));\n        }\n    }\n    /**\n     *\n     */\n    clickOnUserProfile() {\n    }\n    createFolder() {\n    }\n    /**\n     * click to Link\n     * */\n    clickToLink() {\n    }\n    /**\n     *\n     */\n    searchDialogs() {\n    }\n    /**\n     *\n     */\n    searchPersonalMessages() {\n    }\n    /**\n     *\n     * @param detail\n     */\n    clickToCategory() {\n    }\n    /**\n     * Метод для переключения на личный чат\n     * @param detail\n     */\n    toggleChat() {\n        this.dialogVisible = \"showChat\";\n    }\n    /**\n     * Метод для открытия и закрытия личного профиля\n     * @param detail\n     */\n    visibleProfile() {\n        this.profileVisible = !this.profileVisible;\n    }\n    /**\n     * Метод для переключения на контакты\n     */\n    visibleContacts() {\n        this.contactsVisible = !this.contactsVisible;\n    }\n    /**\n     *\n     */\n    clickToShowFoldersHandler() {\n    }\n};\nSAdamChat.style = sAdamChatCss;\n\nexport { SAdamChat as s_adam_chat };\n"],"sourceRoot":"webpack:///"}