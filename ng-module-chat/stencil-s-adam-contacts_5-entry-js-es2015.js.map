{"version":3,"sources":["./node_modules/stencil-chat/dist/esm/s-adam-contacts_5.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACxB;;AAEzD,8DAA8D,yBAAyB,yBAAyB,aAAa,0BAA0B,qBAAqB,6BAA6B,gBAAgB,2BAA2B,oBAAoB,uCAAuC,UAAU,uBAAuB;;AAEhV;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,0BAA0B,2EAA2E,GAAG,4DAAC,SAAS,oBAAoB;AAC9L,oBAAoB,4DAAC,kBAAkB,qCAAqC;AAC5E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6EAA0B;AAC9D;AACA;AACA,2BAA2B;AAC3B;AACA,MAAM;AACN;AACA;;AAEA,kDAAkD,qBAAqB,mCAAmC,yBAAyB,yBAAyB,aAAa,4BAA4B,gBAAgB,2BAA2B,oBAAoB,0BAA0B,oBAAoB,aAAa,sBAAsB,mBAAmB,cAAc,kBAAkB,eAAe,gCAAgC,uBAAuB,iCAAiC,uBAAuB,gCAAgC,WAAW,YAAY,sBAAsB,2BAA2B,kBAAkB,0CAA0C,gBAAgB,eAAe,uCAAuC,eAAe,WAAW,gCAAgC,eAAe,iBAAiB,gBAAgB,sCAAsC,UAAU,uBAAuB;;AAEj6B;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAAW;AACxC,6BAA6B,4DAAW;AACxC,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,2BAA2B,EAAE,4DAAC,0BAA0B,gBAAgB,GAAG,4DAAC,uBAAuB,8BAA8B,GAAG,4DAAC,SAAS,oBAAoB;AAC5L,mBAAmB,4DAAC,iBAAiB,8BAA8B;AACnE,SAAS;AACT;AACA;AACA;;AAEA,wDAAwD,kBAAkB,gBAAgB,2BAA2B,kBAAkB,qCAAqC,UAAU,uBAAuB;;AAE7M;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA,kCAAkC,4DAAW;AAC7C,qCAAqC,4DAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAC,SAAS,uBAAuB,EAAE,4DAAC,4BAA4B,mFAAmF,GAAG,4DAAC,SAAS,yBAAyB;AACzM,mBAAmB,4DAAC,kBAAkB,mBAAmB;AACzD,SAAS,IAAI,4DAAC;AACd;AACA;AACA;;AAEA,yDAAyD,oBAAoB,aAAa,0BAA0B,sBAAsB,sBAAsB,mBAAmB,iBAAiB,yBAAyB,WAAW,YAAY,sBAAsB,2BAA2B,mBAAmB,mBAAmB,eAAe;;AAE1V;AACA;AACA,QAAQ,4DAAgB;AACxB,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,sBAAsB,EAAE,4DAAC,SAAS,sCAAsC,iDAAiD,EAAE,GAAG,4DAAC;AACzJ;AACA;AACA;;AAEA,uDAAuD,kBAAkB,WAAW,mCAAmC,2BAA2B,SAAS,mCAAmC,2BAA2B,cAAc;;AAEvO;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA,gBAAgB,4DAAC,SAAS,uBAAuB;AACjD;AACA;AACA;;AAE2K","file":"stencil-s-adam-contacts_5-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, h, c as createEvent } from './index-53235049.js';\nimport { filterContactBySearchValue } from './index.mjs';\n\nconst sAdamContactsCss = \".contacts-column.sc-s-adam-contacts{background-color:#f7f8f9;padding:20px 20px 0 20px;height:100vh}.col-3.sc-s-adam-contacts{padding:0 !important}.contacts.sc-s-adam-contacts{overflow-y:auto;height:calc(100vh - 100px);padding-bottom:20px}.sc-s-adam-contacts::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamContacts = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Тема для модульного/мобильного чата\n         * */\n        this.theme = \"mobile\";\n    }\n    /**\n     * при изменении входящих контактов фильтрует данные заново\n     * */\n    watchContactsHandler(newValue) {\n        this.filterContacts(this.lastSearchValue, newValue);\n    }\n    componentWillRender() {\n        this.filterContacts(this.lastSearchValue);\n    }\n    render() {\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"contacts-list-header\", { theme: this.theme, onSearchContact: (e) => this.filterContacts(e.detail) }), h(\"div\", { class: \"contacts\" }, this.contactsFiltered.map((dialog) => {\n            return (h(\"contact-card\", { theme: this.theme, contact: dialog }));\n        }))));\n    }\n    /**\n     *\n     * */\n    filterContacts(value, allContacts = this.contacts) {\n        this.lastSearchValue = value;\n        if (!this.disableInnerSearchContactState) {\n            this.contactsFiltered = filterContactBySearchValue(value, allContacts);\n        }\n    }\n    static get watchers() { return {\n        \"contacts\": [\"watchContactsHandler\"]\n    }; }\n};\nSAdamContacts.style = sAdamContactsCss;\n\nconst sAdamDialogsCss = \".col-3.sc-s-adam-dialogs{padding:0 !important}.contacts-column.sc-s-adam-dialogs{background-color:#f7f8f9;padding:20px 20px 0 20px;height:100vh}.contacts.sc-s-adam-dialogs{overflow-y:auto;height:calc(100vh - 129px);padding-bottom:20px}.dialog.sc-s-adam-dialogs{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin:30px 0;padding:20px 10px;cursor:pointer}.dialog.sc-s-adam-dialogs:hover{background-color:white}.dialog.sc-s-adam-dialogs:active{background-color:white}.dialog-photo.sc-s-adam-dialogs{width:40px;height:40px;background-size:cover;background-position:center;margin-right:15px}.dialog-message-caption.sc-s-adam-dialogs{font-weight:700;font-size:13px}.dialog-message-text.sc-s-adam-dialogs{font-size:12px;color:gray}.message-time.sc-s-adam-dialogs{font-size:10px;margin-left:auto;color:lightgray}.sc-s-adam-dialogs::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamDialogs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Массив с элементами диалога\n         */\n        this.dialogs = [];\n        /**\n         * Тема для модульного/мобильного чата\n         * */\n        this.theme = \"mobile\";\n        /**\n         * массив категорий диалогов\n         */\n        this.categories = [];\n        this.clickToDialog = createEvent(this, \"clickToDialog\", 7);\n        this.searchDialogs = createEvent(this, \"searchDialogs\", 7);\n        this.clickToCategory = createEvent(this, \"clickToCategory\", 7);\n    }\n    render() {\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"contacts-list-header\", { theme: \"comp\" }), h(\"dialog-categories\", { categories: this.categories }), h(\"div\", { class: \"contacts\" }, this.dialogs.map((dialog) => {\n            return h(\"dialog-card\", { theme: \"comp\", mess: dialog });\n        }))));\n    }\n};\nSAdamDialogs.style = sAdamDialogsCss;\n\nconst sAdamDirectCss = \".chat-messages.sc-s-adam-direct{padding:40px 20px;overflow-y:auto;height:calc(100vh - 168px);position:relative}.sc-s-adam-direct::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamDirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Личный диалог\n         */\n        this.message = [];\n        this.visibleUserProfile = createEvent(this, \"visibleUserProfile\", 7);\n        this.searchPersonalMessage = createEvent(this, \"searchPersonalMessage\", 7);\n    }\n    /**\n     * меняет статус (присутстия собеседников или контакта) в чате\n     * */\n    // @Method() async updateChatPresenceState(item: ChatUserPresenceState) {\n    //   this.chatPresenceState = item;\n    // }\n    render() {\n        return (h(\"div\", { class: \"direct-comp\" }, h(\"s-adam-personal-header\", { chatPresenceState: this.chatPresenceState, chatActionState: this.chatActionState }), h(\"div\", { class: \"chat-messages\" }, this.message.map((message) => {\n            return h(\"message-from\", { message: message });\n        })), h(\"personal-footer\", null)));\n    }\n};\nSAdamDirect.style = sAdamDirectCss;\n\nconst sAdamNavigateCss = \".nav-column.sc-s-adam-navigate{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;padding-top:20px}.logo.sc-s-adam-navigate{width:50px;height:50px;background-size:cover;background-position:center;margin-bottom:50px;border-radius:100%;cursor:pointer}\";\n\nconst SAdamNavigate = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visibleContacts = createEvent(this, \"visibleContacts\", 7);\n    }\n    render() {\n        return (h(\"div\", { class: \"nav-column\" }, h(\"div\", { class: \"logo border-radius\", style: { backgroundImage: 'url(' + this.logo.logo + ')' } }), h(\"s-adam-nav-item\", null)));\n    }\n};\nSAdamNavigate.style = sAdamNavigateCss;\n\nconst sAdamNoChatCss = \".select-chat.sc-s-adam-no-chat{position:absolute;bottom:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);color:#8d8d8d}\";\n\nconst SAdamNoChat = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(\"div\", { class: \"select-chat\" }, \"Please select a chat\"));\n    }\n};\nSAdamNoChat.style = sAdamNoChatCss;\n\nexport { SAdamContacts as s_adam_contacts, SAdamDialogs as s_adam_dialogs, SAdamDirect as s_adam_direct, SAdamNavigate as s_adam_navigate, SAdamNoChat as s_adam_no_chat };\n"],"sourceRoot":"webpack:///"}