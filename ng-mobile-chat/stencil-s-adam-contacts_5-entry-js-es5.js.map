{"version":3,"sources":["webpack:///node_modules/stencil-chat/dist/esm/s-adam-contacts_5.entry.js"],"names":["sAdamContactsCss","SAdamContacts","hostRef","theme","newValue","filterContacts","lastSearchValue","onSearchContact","e","detail","contactsFiltered","map","dialog","contact","value","allContacts","contacts","disableInnerSearchContactState","style","sAdamDialogsCss","SAdamDialogs","dialogs","categories","clickToDialog","searchDialogs","clickToCategory","mess","sAdamDirectCss","SAdamDirect","message","visibleUserProfile","searchPersonalMessage","chatPresenceState","chatActionState","sAdamNavigateCss","SAdamNavigate","visibleContacts","backgroundImage","logo","sAdamNoChatCss","SAdamNoChat"],"mappings":"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","file":"stencil-s-adam-contacts_5-entry-js-es5.js","sourcesContent":["import { r as registerInstance, h, c as createEvent } from './index-53235049.js';\nimport { filterContactBySearchValue } from './index.mjs';\n\nconst sAdamContactsCss = \".contacts-column.sc-s-adam-contacts{background-color:#f7f8f9;padding:20px 20px 0 20px;height:100vh}.col-3.sc-s-adam-contacts{padding:0 !important}.contacts.sc-s-adam-contacts{overflow-y:auto;height:calc(100vh - 100px);padding-bottom:20px}.sc-s-adam-contacts::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamContacts = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Тема для модульного/мобильного чата\n         * */\n        this.theme = \"mobile\";\n    }\n    /**\n     * при изменении входящих контактов фильтрует данные заново\n     * */\n    watchContactsHandler(newValue) {\n        this.filterContacts(this.lastSearchValue, newValue);\n    }\n    componentWillRender() {\n        this.filterContacts(this.lastSearchValue);\n    }\n    render() {\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"contacts-list-header\", { theme: this.theme, onSearchContact: (e) => this.filterContacts(e.detail) }), h(\"div\", { class: \"contacts\" }, this.contactsFiltered.map((dialog) => {\n            return (h(\"contact-card\", { theme: this.theme, contact: dialog }));\n        }))));\n    }\n    /**\n     *\n     * */\n    filterContacts(value, allContacts = this.contacts) {\n        this.lastSearchValue = value;\n        if (!this.disableInnerSearchContactState) {\n            this.contactsFiltered = filterContactBySearchValue(value, allContacts);\n        }\n    }\n    static get watchers() { return {\n        \"contacts\": [\"watchContactsHandler\"]\n    }; }\n};\nSAdamContacts.style = sAdamContactsCss;\n\nconst sAdamDialogsCss = \".col-3.sc-s-adam-dialogs{padding:0 !important}.contacts-column.sc-s-adam-dialogs{background-color:#f7f8f9;padding:20px 20px 0 20px;height:100vh}.contacts.sc-s-adam-dialogs{overflow-y:auto;height:calc(100vh - 129px);padding-bottom:20px}.dialog.sc-s-adam-dialogs{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin:30px 0;padding:20px 10px;cursor:pointer}.dialog.sc-s-adam-dialogs:hover{background-color:white}.dialog.sc-s-adam-dialogs:active{background-color:white}.dialog-photo.sc-s-adam-dialogs{width:40px;height:40px;background-size:cover;background-position:center;margin-right:15px}.dialog-message-caption.sc-s-adam-dialogs{font-weight:700;font-size:13px}.dialog-message-text.sc-s-adam-dialogs{font-size:12px;color:gray}.message-time.sc-s-adam-dialogs{font-size:10px;margin-left:auto;color:lightgray}.sc-s-adam-dialogs::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamDialogs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Массив с элементами диалога\n         */\n        this.dialogs = [];\n        /**\n         * Тема для модульного/мобильного чата\n         * */\n        this.theme = \"mobile\";\n        /**\n         * массив категорий диалогов\n         */\n        this.categories = [];\n        this.clickToDialog = createEvent(this, \"clickToDialog\", 7);\n        this.searchDialogs = createEvent(this, \"searchDialogs\", 7);\n        this.clickToCategory = createEvent(this, \"clickToCategory\", 7);\n    }\n    render() {\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"contacts-list-header\", { theme: \"comp\" }), h(\"dialog-categories\", { categories: this.categories }), h(\"div\", { class: \"contacts\" }, this.dialogs.map((dialog) => {\n            return h(\"dialog-card\", { theme: \"comp\", mess: dialog });\n        }))));\n    }\n};\nSAdamDialogs.style = sAdamDialogsCss;\n\nconst sAdamDirectCss = \".chat-messages.sc-s-adam-direct{padding:40px 20px;overflow-y:auto;height:calc(100vh - 168px);position:relative}.sc-s-adam-direct::-webkit-scrollbar{width:0px;background:transparent}\";\n\nconst SAdamDirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Личный диалог\n         */\n        this.message = [];\n        this.visibleUserProfile = createEvent(this, \"visibleUserProfile\", 7);\n        this.searchPersonalMessage = createEvent(this, \"searchPersonalMessage\", 7);\n    }\n    /**\n     * меняет статус (присутстия собеседников или контакта) в чате\n     * */\n    // @Method() async updateChatPresenceState(item: ChatUserPresenceState) {\n    //   this.chatPresenceState = item;\n    // }\n    render() {\n        return (h(\"div\", { class: \"direct-comp\" }, h(\"s-adam-personal-header\", { chatPresenceState: this.chatPresenceState, chatActionState: this.chatActionState }), h(\"div\", { class: \"chat-messages\" }, this.message.map((message) => {\n            return h(\"message-from\", { message: message });\n        })), h(\"personal-footer\", null)));\n    }\n};\nSAdamDirect.style = sAdamDirectCss;\n\nconst sAdamNavigateCss = \".nav-column.sc-s-adam-navigate{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;padding-top:20px}.logo.sc-s-adam-navigate{width:50px;height:50px;background-size:cover;background-position:center;margin-bottom:50px;border-radius:100%;cursor:pointer}\";\n\nconst SAdamNavigate = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visibleContacts = createEvent(this, \"visibleContacts\", 7);\n    }\n    render() {\n        return (h(\"div\", { class: \"nav-column\" }, h(\"div\", { class: \"logo border-radius\", style: { backgroundImage: 'url(' + this.logo.logo + ')' } }), h(\"s-adam-nav-item\", null)));\n    }\n};\nSAdamNavigate.style = sAdamNavigateCss;\n\nconst sAdamNoChatCss = \".select-chat.sc-s-adam-no-chat{position:absolute;bottom:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);color:#8d8d8d}\";\n\nconst SAdamNoChat = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(\"div\", { class: \"select-chat\" }, \"Please select a chat\"));\n    }\n};\nSAdamNoChat.style = sAdamNoChatCss;\n\nexport { SAdamContacts as s_adam_contacts, SAdamDialogs as s_adam_dialogs, SAdamDirect as s_adam_direct, SAdamNavigate as s_adam_navigate, SAdamNoChat as s_adam_no_chat };\n"]}