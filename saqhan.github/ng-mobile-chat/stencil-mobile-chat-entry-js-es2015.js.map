{"version":3,"sources":["./node_modules/stencil-chat/dist/esm/mobile-chat.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAC1C;AAC+E;;AAEpG,4CAA4C,YAAY,aAAa,gBAAgB,YAAY,yBAAyB,mBAAmB,kBAAkB,OAAO,QAAQ,oCAAoC,4BAA4B,8CAA8C,sCAAsC,oDAAoD,YAAY,sDAAsD,YAAY,mCAAmC,UAAU,yCAAyC,iDAAiD,0BAA0B,kBAAkB,yCAAyC,2BAA2B,mBAAmB,oCAAoC,iDAAiD,yDAAyD,oCAAoC;;AAEh4B;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAO;AAC9B;AACA;AACA;AACA,wBAAwB,mDAAQ;AAChC;AACA;AACA;AACA,uBAAuB,mDAAW;AAClC;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAC;AAChB;AACA;AACA,uBAAuB,mDAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAC,oBAAoB,0XAA0X,SAAS,0EAA0E,mDAAU,yBAAyB;AAC7hB;AACA,wBAAwB,4DAAC,qBAAqB,yMAAyM,SAAS,8DAA8D;AAC9T;AACA,wBAAwB,4DAAC,oBAAoB,8BAA8B,mDAAU,8HAA8H;AACnN;AACA,wBAAwB,4DAAC,kBAAkB,4HAA4H,mDAAO,mBAAmB;AACjM;AACA,wBAAwB,4DAAC,mBAAmB,2EAA2E,SAAS,iOAAiO;AACjW;AACA,uBAAuB,4DAAC;AACxB;AACA;AACA;AACA;;AAEqC","file":"stencil-mobile-chat-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, h } from './index-53235049.js';\nimport './index.mjs';\nimport { d as dialogs, b as contacts, M as MessageMock, c as categories } from './mock-8ce3ba60.js';\n\nconst mobileChatCss = \".temp.sc-mobile-chat{width:414px;height:708px;overflow:hidden;margin:auto;border:5px solid #4c567d;border-radius:20px;position:absolute;left:0;right:0;-webkit-transform:translate(0, 15%);transform:translate(0, 15%);-webkit-box-shadow:15px 10px 40px 1px #4c567d;box-shadow:15px 10px 40px 1px #4c567d}.temp.sc-mobile-chat .m-chat-dialogs.sc-mobile-chat{height:63vh}.temp.sc-mobile-chat .personal-message.sc-mobile-chat{height:59vh}.sc-mobile-chat::-webkit-scrollbar{width:5px}.sc-mobile-chat::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,0.3);-webkit-border-radius:5px;border-radius:3px}.sc-mobile-chat::-webkit-scrollbar-thumb{-webkit-border-radius:10px;border-radius:10px;background:rgba(108, 108, 108, 0.8);-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,0.5)}.sc-mobile-chat::-webkit-scrollbar-thumb:window-inactive{background:rgba(106, 106, 106, 0.4)}\";\n\nconst MobileChat = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Выбираем какой контент показывать\n         * */\n        this.showContent = \"profile\";\n        // profile\n        // folders\n        // contacts\n        /**\n         * массив данных для диалогов\n         * */\n        this.dialogs = dialogs;\n        /**\n         * массив данных для контактов\n         * */\n        this.contacts = contacts;\n        /**\n         * массив данных личных диалогово\n         * */\n        this.message = MessageMock;\n    }\n    /**\n     * click to Link\n     * */\n    clickToLink({ detail }) {\n        return detail;\n        // console.log(detail);\n    }\n    /**\n     * click to Link\n     * */\n    clickToDialog({ detail }) {\n        return detail;\n        // console.log(\"clickToDialog\", detail);\n    }\n    /**\n     * click to Link\n     * */\n    clickToContact({ detail }) {\n        return detail;\n        // console.log(\"clickToContact\", detail);\n    }\n    /**\n     * Click to category filter\n     * */\n    clickToCategory({ detail }) {\n        return detail;\n        // console.log(\"clickToCategory\", detail);\n    }\n    /**\n     * Поиск контактов\n     * */\n    searchContact(e) {\n        return e;\n        // console.log(\"searchContact\", e);\n    }\n    /**\n     * Поиск среди диалогов\n     * */\n    searchDialogs(e) {\n        return e;\n        // console.log(\"searchDialogs\", e.detail.detail);\n    }\n    /**\n     * Поиск среди диалогов\n     * */\n    searchPersonalMessages(e) {\n        return e;\n        // console.log(\"searchPersonalMessages\", e);\n    }\n    /**\n     * click to add dialog\n     * */\n    clickToAddDialog() {\n        // console.log(\"clickToAddDialog\");\n    }\n    /**\n     * click to click To Show Dialogs\n     * */\n    clickToShowDialogs() {\n        // console.log(\"clickToShowDialogs\");\n    }\n    /**\n     * click to click To Show Contacts\n     * */\n    clickToShowContacts() {\n        // console.log(\"clickToShowContacts\");\n    }\n    /**\n     * click to click To Show MenuBar\n     * */\n    clickToShowMenuBar() {\n        // console.log(\"clickToShowMenuBar\");\n    }\n    // personal chat\n    /**\n     * click to click To Show MenuBar\n     * */\n    clickToUserProfile() {\n        // console.log(\"clickToUserProfile\");\n    }\n    cancelSearchPersonal() {\n        // console.log(\"cancelSearchPersonal\");\n    }\n    render() {\n        return h(\"div\", null, this.getContent(this.showContent));\n    }\n    componentWillLoad() {\n        this.dialogs = dialogs;\n    }\n    clickToShowDialogsHandler() {\n        // console.log('clickToShowDialogsHandler');\n    }\n    clickToShowFoldersHandler() {\n        console.log('clickToShowFoldersHandler');\n    }\n    /**\n     *\n     * */\n    clickOnUserProfile() {\n        // console.log('clickOnUserProfile')\n    }\n    /**\n     *\n     * */\n    createFolderHandler(e) {\n        return e;\n        // console.log('createFolderHandler', e)\n    }\n    /**\n     * Метод для вывода определенного контента\n     * */\n    getContent(content) {\n        switch (content) {\n            case \"dialogs\":\n                return (h(\"mobile-dialogs\", { onClickToAddDialog: () => this.clickToAddDialog(), onClickToDialog: (item) => this.clickToDialog(item), onClickToCategory: (item) => this.clickToCategory(item), onClickToShowDialogs: () => this.clickToShowDialogs(), onClickToShowContacts: () => this.clickToShowContacts(), onClickToShowMenuBar: () => this.clickToShowMenuBar(), onSearchDialogs: (detail) => this.searchDialogs({ detail }), onCancelSearchPersonal: () => this.cancelSearchPersonal(), categories: categories, dialogs: this.dialogs }));\n            case \"personal\":\n                return (h(\"mobile-personal\", { onClickToShowDialogs: () => this.clickToShowDialogs(), onClickToUserProfile: () => this.clickToUserProfile(), message: this.message, onSearchPersonalMessages: (detail) => this.searchPersonalMessages({ detail }), onCancelSearchPersonal: () => this.cancelSearchPersonal() }));\n            case \"profile\":\n                return (h(\"s-adam-profile\", { theme: \"mobile\", categories: categories, onClickToShowDialogs: () => this.clickToShowDialogsHandler(), onClickToShowFolders: () => this.clickToShowFoldersHandler() }));\n            case \"folders\":\n                return (h(\"user-folders\", { onClickToUserProfile: () => this.clickOnUserProfile(), onCreateFolder: (e) => this.createFolderHandler(e.detail), dialogs: dialogs, theme: \"mobile\" }));\n            case \"contacts\":\n                return (h(\"contacts-list\", { contacts: this.contacts, onSearchContact: (detail) => this.searchContact({ detail }), onClickToShowDialogs: () => this.clickToShowDialogs(), onClickToShowContacts: () => this.clickToShowContacts(), onClickToShowMenuBar: () => this.clickToShowMenuBar(), onClickToContact: (item) => this.clickToContact(item) }));\n            default:\n                return h(\"div\", null, \"no content\");\n        }\n    }\n};\nMobileChat.style = mobileChatCss;\n\nexport { MobileChat as mobile_chat };\n"],"sourceRoot":"webpack:///"}