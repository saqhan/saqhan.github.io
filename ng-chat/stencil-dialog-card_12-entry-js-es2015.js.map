{"version":3,"sources":["./node_modules/stencil-chat/dist/esm/dialog-card_12.entry.js"],"names":[],"mappings":"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","file":"stencil-dialog-card_12-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-325847e8.js';\nimport { M as MessageTypeEnum$1 } from './common.interface-2aa0c474.js';\nimport { d as dialogs, l as logo, n as navItems, M as MessageMock } from './mock-ba054b7a.js';\n\nconst dialogCardCss = \".m-dialog-card{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-bottom:20px;cursor:pointer}.img-user{margin-right:20px;text-align:center}.img-user .img{width:50px;height:50px;border-radius:50%;background-position:center;background-size:cover}.info-card{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;width:100%;-ms-flex-pack:justify;justify-content:space-between}.unfo-user{width:80%;overflow:hidden}.name-user{font-size:14px;font-weight:600;color:#4c567d}.message-user{font-size:14px;color:#979eab;white-space:nowrap}.data-message{text-align:center}.data-message .date{font-size:10px;color:#979eab}.data-message .new-message{font-size:10px;color:#979eab}.add-new-message{background-color:#ff7e7f;font-size:10px;padding:1px 5px;border-radius:50%;color:#fff}.comp .info-card{width:70%}.comp .m-dialog-card{padding:20px 10px;margin:0}.comp .m-dialog-card:hover{background-color:white}.comp .data-message{height:100%}\";\n\nconst DialogCard = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * карточка диалога\r\n         * */\r\n        this.theme = 'mobile';\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"m-dialog-card\", onClick: () => this.clickToLink.emit({ place: 'showPersonalDialog', item: this.mess }) }, h(\"div\", { class: \"img-user\" }, h(\"div\", { class: this.mess.online ? 'img online' : 'img', style: { backgroundImage: `url(${this.mess.img})` } })), h(\"div\", { class: \"info-card\" }, h(\"div\", { class: \"unfo-user\" }, h(\"div\", { class: \"name-user\" }, this.mess.name), h(\"div\", { class: \"message-user\" }, this.mess.mess)), h(\"div\", { class: \"data-message\" }, h(\"div\", { class: \"date\" }, \" \", this.createSendTime(this.mess.time.created)), h(\"span\", { class: \"add-new-message\" }, \"1\"))))));\r\n    }\r\n    /**\r\n     *\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true\r\n        };\r\n    }\r\n    /**\r\n     * Метод вывода времени отправки сообщения\r\n     * */\r\n    createSendTime(array) {\r\n        const timeNow = array;\r\n        let hours = timeNow.getHours();\r\n        let minutes = timeNow.getMinutes();\r\n        // add zero for minutes\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        // выводим время в минутах/часах\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n};\r\nDialogCard.style = dialogCardCss;\n\nconst messFromMeCss = \".admin-mess-wrapp{width:100%}.admin-mess-wrapper .mess-img{height:150px;border-top-left-radius:20px;border-top-right-radius:0px;border-bottom-right-radius:20px;border-bottom-left-radius:20px;background-position:center;background-size:cover}.admin-mess-wrapper{margin:15px 0}.admin-mess-wrapp{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end}.admin-mess{max-width:250px;padding:10px;border:1px solid #c7d0e8;border-radius:20px 0px 20px 20px;background-color:#ebf0fe;color:#799af8;font-size:14px;display:-ms-flexbox;display:flex}.admin-mess-wrapper{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end}.admin-mess .check{font-size:10px;margin-left:5px}.admin-mess-wrapper .mess-img{max-width:350px;min-width:300px;height:150px;border-top-left-radius:20px;border-top-right-radius:0px;border-bottom-right-radius:20px;border-bottom-left-radius:20px;background-position:center;background-size:cover}.mess-img-admin .check{position:relative;top:80%;left:92%;font-size:10px;color:#fff}.mess-img .check{position:relative;top:80%;left:95%;font-size:10px;color:#fff}@media (max-width: 414px){.admin-mess-wrapper .mess-img{max-width:60%;min-width:inherit}.mess-img .check{left:90%}}\";\n\nconst MessFromMe = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"admin-mess-wrapper\" }, h(\"div\", { class: \"admin-mess-wrapp\" }, this.createType(this.message))));\r\n    }\r\n    createType(array) {\r\n        switch (array.type) {\r\n            case MessageTypeEnum$1.text:\r\n                return (h(\"div\", { class: \"admin-mess\" }, h(\"div\", { class: \"text-wrapper\" }, h(\"span\", { class: \"message-text\" }, this.message.content)), h(\"div\", { class: \"info-wrapper\" }, h(\"span\", { class: \"personal-mess-date\" }, this.createSendTime(this.message.time.created)), h(\"span\", { class: \"check\" }, h(\"i\", { class: \"fa fa-check-double\" })))));\r\n            case MessageTypeEnum$1.image:\r\n                return (h(\"div\", { class: \"mess-img\", style: { backgroundImage: `url(${this.message.content})` } }, h(\"span\", { class: \"check\" }, h(\"i\", { class: \"fa fa-check-double\" }))));\r\n        }\r\n    }\r\n    /**\r\n     * Метод вывода времени отправки сообщения\r\n     * */\r\n    createSendTime(array) {\r\n        const timeNow = array;\r\n        let hours = timeNow.getHours();\r\n        let minutes = timeNow.getMinutes();\r\n        // add zero for minutes\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n};\r\nMessFromMe.style = messFromMeCss;\n\nconst messToMeCss = \".text-wrapper{width:75%}.info-wrapper{width:25%;min-width:55px;text-align:right}.user-mess-wrapper{margin:15px 0}.user-mess-wrapp{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:end}.user-mess-wrapp .img{width:30px;height:30px;margin-right:10px;border-radius:50%;background-size:cover;background-position:center}.user-mess{max-width:250px;padding:10px;border:1px solid #ccc;border-radius:0px 20px 20px 20px;font-size:14px;color:#979eab;display:-ms-flexbox;display:flex;-ms-flex-align:unset;align-items:unset;-ms-flex-pack:justify;justify-content:space-between}.personal-mess-date{font-size:10px;margin-left:5px}.user-mess .check{font-size:10px;margin-left:5px}.user-mess-wrapper .mess-img{max-width:350px;min-width:300px;height:150px;border-radius:0px 20px 20px 20px;background-position:center;background-size:cover}.mess-img .check{position:relative;top:80%;left:90%;font-size:10px;color:#fff}@media (max-width: 414px){.user-mess-wrapper .mess-img{max-width:60%;min-width:inherit}}\";\n\nconst MessToMe = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"user-mess-wrapper\" }, h(\"div\", { class: \"user-mess-wrapp\" }, h(\"span\", { class: \"img\", style: { backgroundImage: `url(${this.message.sender.icon})` } }), this.createType(this.message))));\r\n    }\r\n    createType(array) {\r\n        switch (array.type) {\r\n            case MessageTypeEnum$1.text:\r\n                return (h(\"div\", { class: \"user-mess\" }, h(\"div\", { class: \"text-wrapper\" }, h(\"span\", { class: \"message-text\" }, this.message.content)), h(\"div\", { class: \"info-wrapper\" }, h(\"span\", { class: \"personal-mess-date\" }, this.createSendTime(this.message.time.created)))));\r\n            case MessageTypeEnum$1.image:\r\n                return (h(\"div\", { class: \"mess-img\", style: { backgroundImage: `url(${this.message.content})` } }));\r\n        }\r\n    }\r\n    /**\r\n     * Метод вывода времени отправки сообщения\r\n     * */\r\n    createSendTime(array) {\r\n        const timeNow = array;\r\n        const hours = timeNow.getHours();\r\n        let minutes = timeNow.getMinutes();\r\n        // add zero for minutes\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n};\r\nMessToMe.style = messToMeCss;\n\nconst myComponentCss = \":host{display:block}\";\n\nconst MyComponent = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        // return <mobile-chat></mobile-chat>;\r\n        return h(\"s-adam-chat\", null);\r\n    }\r\n};\r\nMyComponent.style = myComponentCss;\n\nconst personalFooterCss = \".personal-footer{position:absolute;bottom:0;width:100%;background-color:white}.footer-wrapper{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-radius:20px;-ms-flex-align:center;align-items:center;padding:10px 15px 10px;-webkit-box-shadow:0px 0px 10px 5px #ccc;box-shadow:0px 0px 10px 5px #ccc;font-size:18px;color:#979eab}.file,.audio{width:10%;text-align:center;cursor:pointer}.file i:hover{color:#6328f8}.audio i:hover{color:#6328f8}.input-wrapper{width:80%}.input-wrapper input{width:100%;text-align:center;color:#4c567d;padding:10px 0;border:none;font-size:16px;outline:none}\";\n\nconst PersonalFooter = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"personal-footer\" }, h(\"div\", { class: \"footer-wrapper\" }, h(\"div\", { class: \"file\", onClick: () => this.clickToLink.emit({ place: \"add-file-mess\" }) }, h(\"i\", { class: \"fas fa-paperclip\" })), h(\"div\", { class: \"input-wrapper\" }, h(\"form\", { onSubmit: (e) => this.sendingNewMess(e) }, h(\"input\", { type: \"text\", placeholder: \"Type something ...\" }))), h(\"div\", { class: \"audio\", onClick: () => this.clickToLink.emit({ place: \"add-audio-mess\" }) }, h(\"i\", { class: \"fas fa-microphone\" })))));\r\n    }\r\n    /**\r\n     * when sending message\r\n     * */\r\n    sendingNewMess(e) {\r\n        e.preventDefault();\r\n        console.log(\"sendingNewMess\", e.currentTarget.querySelector('input').value);\r\n        e.currentTarget.querySelector('input').value = '';\r\n    }\r\n};\r\nPersonalFooter.style = personalFooterCss;\n\nconst sAdamChatCss = \"main{height:95vh;overflow:hidden}.chat{position:relative;height:95vh}\";\n\nconst SAdamChat = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         *Стейт для переключения на личный чат\r\n         */\r\n        this.dialogVisible = 'noChat';\r\n        /**\r\n         * Стейт для показа профиля пользователя\r\n         */\r\n        this.profileVisible = false;\r\n    }\r\n    /**\r\n     * Метод для переключения на личный чат\r\n     * @param detail\r\n     */\r\n    toggleChat({ detail }) {\r\n        if (detail.place === 'showPersonalDialog') {\r\n            this.dialogVisible = 'showChat';\r\n        }\r\n    }\r\n    toggleProfile({ detail }) {\r\n        if (detail.place === 'userName') {\r\n            this.profileVisible = !this.profileVisible;\r\n        }\r\n    }\r\n    render() {\r\n        return h(\"main\", null, h(\"div\", { class: \"container\" }, h(\"div\", { class: \"row\" }, h(\"div\", { class: \"col-1\" }, h(\"s-adam-navigate\", { logo: logo, navItems: navItems })), h(\"div\", { class: \"col-3\" }, h(\"s-adam-contacts\", { onClickToLink: ({ detail }) => { this.toggleChat({ detail }); }, dialogs: dialogs })), h(\"div\", { class: \"col\" }, h(\"section\", { class: \"chat\" }, this.showChat(this.dialogVisible))), this.showProfile(this.profileVisible))));\r\n    }\r\n    /**\r\n     * Метод, который выводит необходимый чат\r\n     * @param content\r\n     */\r\n    showChat(content) {\r\n        switch (content) {\r\n            case 'showChat':\r\n                return h(\"s-adam-direct\", { onClickToLink: ({ detail }) => this.clickToLink({ detail }), onClickOnUsername: (item) => { this.toggleProfile(item); }, message: MessageMock });\r\n            case 'noChat':\r\n                return h(\"s-adam-no-chat\", null);\r\n        }\r\n    }\r\n    showProfile(item) {\r\n        if (item === true) {\r\n            return (h(\"div\", { class: \"col-3\" }, h(\"s-adam-profile\", null)));\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n    * click to Link\r\n    * */\r\n    clickToLink({ detail }) {\r\n        console.log(detail);\r\n    }\r\n};\r\nSAdamChat.style = sAdamChatCss;\n\nconst sAdamContactsCss = \".contacts-column{background-color:#f7f8f9;padding:20px;height:100vh}.search-contact-wrapper{position:relative}.search-contact-wrapper .fas{position:absolute;left:15px;font-size:12px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.search-contact{border:none;padding:10px 40px;width:100%}.search-contact-block{padding-bottom:20px}.contacts{overflow-y:auto;max-height:85vh}.dialog{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin:30px 0;padding:20px 10px;cursor:pointer}.dialog:hover{background-color:white}.dialog:active{background-color:white}.dialog-photo{width:40px;height:40px;background-size:cover;background-position:center;margin-right:15px}.dialog-message-caption{font-weight:700;font-size:13px}.dialog-message-text{font-size:12px;color:gray}.message-time{font-size:10px;margin-left:auto;color:lightgray}::-webkit-scrollbar{width:0px;background:transparent;}input::-moz-placeholder{color:#979eab}input::-webkit-input-placeholder{color:#979eab}\";\n\nconst SAdamContacts = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Массив с элементами диалога\r\n         */\r\n        this.dialogs = [];\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"contacts-column\" }, h(\"div\", { class: \"search-contact-block\" }, h(\"div\", { class: \"search-contact-wrapper\" }, h(\"i\", { class: \"fas fa-search\" }), h(\"input\", { class: \"search-contact\", type: \"text\", placeholder: \"Search contact\" }))), h(\"div\", { class: \"contacts\" }, this.dialogs.map(dialog => {\r\n            return (h(\"dialog-card\", { theme: 'comp', mess: dialog }));\r\n        }))));\r\n    }\r\n};\r\nSAdamContacts.style = sAdamContactsCss;\n\n/**\r\n *\r\n * */\r\nvar MessageDirectionEnum;\r\n(function (MessageDirectionEnum) {\r\n    /**\r\n     * сообщения написал кто то другой, и получено мною\r\n     * */\r\n    MessageDirectionEnum[MessageDirectionEnum[\"toMe\"] = 0] = \"toMe\";\r\n    /**\r\n     * сообщения написал я\r\n     * */\r\n    MessageDirectionEnum[MessageDirectionEnum[\"fromMe\"] = 1] = \"fromMe\";\r\n    /**\r\n     * сообщения которое будет отображаться в центре\r\n     * */\r\n    MessageDirectionEnum[MessageDirectionEnum[\"center\"] = 2] = \"center\";\r\n})(MessageDirectionEnum || (MessageDirectionEnum = {}));\r\n/**\r\n *\r\n * */\r\nvar MessageTypeEnum;\r\n(function (MessageTypeEnum) {\r\n    /**\r\n     * сообщения написал кто то другой, и получено мною\r\n     * */\r\n    MessageTypeEnum[\"text\"] = \"text\";\r\n    /**\r\n     * аудио сообщения записанное самим пользователем\r\n     * */\r\n    MessageTypeEnum[\"liveAudio\"] = \"live-audio\";\r\n    /**\r\n     * аудио сообщение любое которое не записано самим пользователем\r\n     * */\r\n    MessageTypeEnum[\"audio\"] = \"audio\";\r\n    /**\r\n     * фотка сделанная на устройстве пользователя и отправленная сразу\r\n     * */\r\n    MessageTypeEnum[\"liveImage\"] = \"live-image\";\r\n    /**\r\n     * фотка из устройства отправителя\r\n     * */\r\n    MessageTypeEnum[\"image\"] = \"image\";\r\n    /**\r\n     * видео сделанная на устройстве пользователя и отправленная сразу\r\n     * */\r\n    MessageTypeEnum[\"liveVideo\"] = \"live-video\";\r\n    /**\r\n     * видео из устройства отправителя\r\n     * */\r\n    MessageTypeEnum[\"video\"] = \"video\";\r\n    /**\r\n     * файл из устройства отправителя\r\n     * */\r\n    MessageTypeEnum[\"file\"] = \"file\";\r\n})(MessageTypeEnum || (MessageTypeEnum = {}));\n\nconst sAdamDirectCss = \".header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;font-size:14px;padding:20px;border-bottom:1px solid #f7f8f9}.search-message,.settings{color:#bacbe3;cursor:pointer}.user{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.user-name{font-weight:700;cursor:pointer}.online-marker{width:8px;height:8px;border-radius:100%;background-color:#5dc969;margin-left:10px}.chat-messages{padding:40px 0;overflow-y:auto;height:80vh;position:relative}\";\n\nconst SAdamDirect = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Личный диалог\r\n         */\r\n        this.message = [];\r\n        this.clickOnUsername = createEvent(this, \"clickOnUsername\", 7);\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", null, h(\"div\", { class: \"header\" }, h(\"div\", { class: \"search-message\" }, h(\"i\", { class: \"fas fa-search hover-link\" })), h(\"div\", { class: \"user\" }, h(\"div\", { class: \"user-name\", onClick: (item) => this.clickOnUsername.emit({ place: 'userName', item }) }, \"Tim Ostin\"), h(\"div\", { class: \"online-marker\" })), h(\"div\", { class: \"settings\" }, h(\"i\", { class: \"fas fa-cog hover-link\" }))), h(\"div\", { class: \"chat-messages\" }, this.message.map(message => {\r\n            switch (message.direction) {\r\n                case MessageDirectionEnum.toMe:\r\n                    return h(\"mess-to-me\", { message: message });\r\n                case MessageDirectionEnum.fromMe:\r\n                    return h(\"mess-from-me\", { message: message });\r\n                case MessageDirectionEnum.center:\r\n                    return h(\"div\", null, \"Today\");\r\n            }\r\n        })), h(\"personal-footer\", null)));\r\n    }\r\n};\r\nSAdamDirect.style = sAdamDirectCss;\n\nconst sAdamNavItemCss = \"\";\n\nconst SAdamNavItem = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"nav-item\" }, h(\"i\", { class: 'hover-link ' + this.navItems.icon })));\r\n    }\r\n};\r\nSAdamNavItem.style = sAdamNavItemCss;\n\nconst sAdamNavigateCss = \".nav-column{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;padding-top:20px}.logo{width:50px;height:50px;background-size:cover;background-position:center;margin-bottom:50px;border-radius:100%;cursor:pointer}.fas,.fab{color:#bacbe3}.hover-link:hover{color:#6328f8}.hover-link:active{color:#6328f8}.nav-item{margin-bottom:20px;cursor:pointer}\";\n\nconst SAdamNavigate = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Иконки навигации\r\n         */\r\n        this.navItems = [];\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"nav-column\" }, h(\"div\", { class: \"logo border-radius\", style: { backgroundImage: 'url(' + this.logo.logo + ')' } }), this.navItems.map(item => {\r\n            return (h(\"s-adam-nav-item\", { navItems: item }));\r\n        })));\r\n    }\r\n};\r\nSAdamNavigate.style = sAdamNavigateCss;\n\nconst sAdamNoChatCss = \".select-chat{position:absolute;bottom:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);color:#8d8d8d}\";\n\nconst SAdamNoChat = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"select-chat\" }, \"Please select a chat\"));\r\n    }\r\n};\r\nSAdamNoChat.style = sAdamNoChatCss;\n\nconst sAdamProfileCss = \".comp .links-wrapper a{display:none}.mobile .links-wpapper{display:-ms-flexbox;display:flex}.mobile .about-user{margin-bottom:30px}.profile{background-color:#f7f8f9;padding:20px;height:100vh;overflow:auto}.about-user{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;margin-bottom:70px}.profile-user-photo{width:80px;height:80px;background-size:cover;background-position:center;margin-bottom:20px;border-radius:100%;cursor:pointer}.profile .user-name{font-size:14px;margin-bottom:10px}.user-mail{margin-bottom:30px;font-size:12px;color:#8d8d8d}.about-user .fas{margin:0 15px}.user-social{margin-bottom:40px}.user-social-title,.media-title{font-weight:700;font-size:12px;margin-bottom:10px}.user-social-block{background:white;min-height:140px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;padding:20px}.user-social-block .fab{width:16px;text-align:center;margin-right:20px}.user-social-name,.mediafile-desc{font-size:12px;color:#8d8d8d;font-weight:600}.media-header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.media-descr{font-size:8px;color:#8d8d8d}.media-item{padding:10px;background:white;margin-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.mediafile{width:40px;height:40px;border-radius:5px;margin-right:20px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.pdf{background-color:#ff908c}.zip{background-color:#58c4c9}.doc{background-color:#73a4e9}.mediafile span{color:white;font-size:8px;font-weight:600}.fas,.fab{color:#bacbe3;cursor:pointer}.hover-link:hover{color:#6328f8}::-webkit-scrollbar{width:0px;background:transparent;}\";\n\nconst SAdamProfile = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Задаем стиль для мобильной/пк версии\r\n         * */\r\n        this.theme = \"comp\";\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"section\", { class: \"profile\" }, h(\"div\", { class: this.getClassForHost() }, h(\"div\", { class: \"links-wrapper\" }, h(\"a\", { onClick: () => this.clickToLink.emit({ place: \"showPersonalDialog\" }) }, \" \", h(\"i\", { class: \"fas fa-arrow-left\" }))), h(\"div\", { class: \"about-user\" }, h(\"div\", { class: \"profile-user-photo border-radius\", style: {\r\n                backgroundImage: \"url(https://via.placeholder.com/200x200?text=Text)\",\r\n            } }), h(\"div\", { class: \"user-name\" }, \"Tim Ostin\"), h(\"div\", { class: \"user-mail\" }, \"timostin@gmail.com\"), h(\"div\", { class: \"user-contact\" }, h(\"i\", { class: \"fas fa-phone-alt hover-link\" }), h(\"i\", { class: \"fas fa-video hover-link\" }), h(\"i\", { class: \"fas fa-envelope hover-link\" }))), h(\"div\", { class: \"user-social\" }, h(\"div\", { class: \"user-social-title\" }, \"Terhubung\"), h(\"div\", { class: \"user-social-block\" }, h(\"div\", { class: \"user-social-link\" }, h(\"i\", { class: \"fab fa-instagram hover-link\" }), h(\"span\", { class: \"user-social-name\" }, \"TimOstin\")), h(\"div\", { class: \"user-social-link\" }, h(\"i\", { class: \"fab fa-twitter hover-link\" }), h(\"span\", { class: \"user-social-name\" }, \"Tim Ostin\")), h(\"div\", { class: \"user-social-link\" }, h(\"i\", { class: \"fab fa-facebook-f \\u0440\" }), h(\"span\", { class: \"user-social-name\" }, \"Tim Ostin\")))), h(\"div\", { class: \"media\" }, h(\"div\", { class: \"media-header\" }, h(\"div\", { class: \"media-title\" }, \"Media\"), h(\"div\", { class: \"media-descr\" }, \"Lihat lebin banyak\")), h(\"div\", { class: \"media-block\" }, h(\"div\", { class: \"media-item\" }, h(\"div\", { class: \"mediafile pdf\" }, h(\"span\", null, \"PDF\")), h(\"span\", { class: \"mediafile-desc\" }, \"Buku Hueanghong.pdf\")), h(\"div\", { class: \"media-item\" }, h(\"div\", { class: \"mediafile zip\" }, h(\"span\", null, \"ZIP\")), h(\"span\", { class: \"mediafile-desc\" }, \"File jungjang.zip\")), h(\"div\", { class: \"media-item\" }, h(\"div\", { class: \"mediafile doc\" }, h(\"span\", null, \"DOC\")), h(\"span\", { class: \"mediafile-desc\" }, \"Laporan keuangan.ppt\")))))));\r\n    }\r\n    /**\r\n     * выводим класс\r\n     * */\r\n    getClassForHost() {\r\n        return {\r\n            [this.theme]: true,\r\n        };\r\n    }\r\n};\r\nSAdamProfile.style = sAdamProfileCss;\n\nexport { DialogCard as dialog_card, MessFromMe as mess_from_me, MessToMe as mess_to_me, MyComponent as my_component, PersonalFooter as personal_footer, SAdamChat as s_adam_chat, SAdamContacts as s_adam_contacts, SAdamDirect as s_adam_direct, SAdamNavItem as s_adam_nav_item, SAdamNavigate as s_adam_navigate, SAdamNoChat as s_adam_no_chat, SAdamProfile as s_adam_profile };\n"],"sourceRoot":"webpack:///"}