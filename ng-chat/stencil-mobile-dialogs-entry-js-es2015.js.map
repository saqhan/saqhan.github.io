{"version":3,"sources":["./node_modules/stencil-chat/dist/esm/mobile-dialogs.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiF;;AAEjF,0CAA0C,WAAW,YAAY,eAAe,sBAAsB,6BAA6B,eAAe,oBAAoB,aAAa,sBAAsB,8BAA8B,sBAAsB,mBAAmB,UAAU,oBAAoB,aAAa,qBAAqB,uBAAuB,sBAAsB,mBAAmB,sBAAsB,eAAe,eAAe,UAAU,YAAY,kBAAkB,gBAAgB,cAAc,oCAAoC,4BAA4B,qBAAqB,eAAe,cAAc,gCAAgC,sBAAsB,gBAAgB,cAAc,yBAAyB,cAAc,sBAAsB,cAAc,eAAe,gBAAgB,sBAAsB,6BAA6B,2BAA2B,cAAc,eAAe,oBAAoB,aAAa,sBAAsB,8BAA8B,sBAAsB,mBAAmB,YAAY,iBAAiB,sBAAsB,cAAc,eAAe;;AAEnnC;AACA;AACA,QAAQ,4DAAgB;AACxB,2BAA2B,4DAAW;AACtC,+BAA+B,4DAAW;AAC1C;AACA;AACA,gBAAgB,4DAAC,SAAS,0BAA0B,EAAE,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,UAAU,oEAAoE,yBAAyB,GAAG,EAAE,4DAAC,OAAO,yBAAyB,IAAI,4DAAC,UAAU,iBAAiB,eAAe,4DAAC,UAAU,iEAAiE,sBAAsB,GAAG,EAAE,4DAAC,OAAO,8BAA8B,KAAK,4DAAC,SAAS,oBAAoB,yCAAyC,4DAAC,SAAS,0BAA0B,EAAE,4DAAC,UAAU,qBAAqB,IAAI,4DAAC,SAAS,yBAAyB,EAAE,4DAAC,UAAU,uCAAuC,oBAAoB,GAAG,EAAE,4DAAC,OAAO,0BAA0B,IAAI,4DAAC,UAAU,uCAAuC,oBAAoB,GAAG,EAAE,4DAAC,OAAO,+BAA+B,IAAI,4DAAC,UAAU,uCAAuC,oBAAoB,GAAG,EAAE,4DAAC,OAAO,uBAAuB;AACt9B;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAC,UAAU,2DAA2D,+BAA+B,GAAG;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAC,iBAAiB,aAAa;AAC9C,KAAK;AACL;AACA;;AAE2C","file":"stencil-mobile-dialogs-entry-js-es2015.js","sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-325847e8.js';\n\nconst mobileDialogsCss = \".m-chat-wrapper{width:100%;height:100%}.m-chat-header{padding:20px 20px 0px;border-bottom:1px solid #ccc}.title-wrapper{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.btns-nav{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:20px 10px 0px}.btns-nav span{font-size:14px;width:25%;height:30px;text-align:center;font-weight:600;color:#979eab;-webkit-transition:0.3s ease-in-out;transition:0.3s ease-in-out}.btns-nav span:hover{cursor:pointer;color:#5780f7;border-bottom:2px solid #5780f7}.m-chat-header .title{font-weight:600;color:#4c567d}.m-chat-header .search i{color:#979eab}.m-chat-header .add i{color:#979eab;font-size:18px}.m-chat-dialogs{padding:20px 30px 0px;border-bottom:1px solid #ccc;height:calc(100vh - 150px);overflow:auto}.m-chat-footer{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;margin:15px;padding:0px 30px}.m-chat-footer span i{color:#979eab;font-size:18px}\";\n\nconst MobileDialogs = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.clickToLink = createEvent(this, \"clickToLink\", 7);\r\n        this.clickToCategory = createEvent(this, \"clickToCategory\", 7);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"m-chat-wrapper\" }, h(\"div\", { class: \"m-chat-header\" }, h(\"div\", { class: \"title-wrapper\" }, h(\"span\", { class: \"search custom-link\", onClick: () => this.clickToLink.emit({ place: 'search-dialog' }) }, h(\"i\", { class: \"fas fa-search\" })), h(\"span\", { class: \"title\" }, \"Messages\"), h(\"span\", { class: \"add custom-link\", onClick: () => this.clickToLink.emit({ place: 'add-dialog' }) }, h(\"i\", { class: \"fas fa-plus-circle\" }))), h(\"div\", { class: \"btns-nav\" }, this.getCategories(this.categories))), h(\"div\", { class: \"m-chat-dialogs\" }, h(Dialog, { mess: this.dialogs })), h(\"div\", { class: \"m-chat-footer\" }, h(\"span\", { onClick: () => this.clickToLink.emit({ place: 'new-mess' }) }, h(\"i\", { class: \"far fa-comment\" })), h(\"span\", { onClick: () => this.clickToLink.emit({ place: 'contacts' }) }, h(\"i\", { class: \"fas fa-user-friends\" })), h(\"span\", { onClick: () => this.clickToLink.emit({ place: 'menu-bar' }) }, h(\"i\", { class: \"fas fa-bars\" })))));\r\n    }\r\n    /**\r\n     * Метод получения названий категорий\r\n     * */\r\n    getCategories(array) {\r\n        return array.map((item) => (h(\"span\", { class: item.id, onClick: () => this.clickToCategory.emit({ place: 'item-category', item }) }, item.name)));\r\n    }\r\n};\r\n/**\r\n * Распаковка массива диалогов и выдача в компоненте <dialog-card/>\r\n * */\r\nconst Dialog = (array) => {\r\n    return array.mess.map((item) => {\r\n        return h(\"dialog-card\", { mess: item });\r\n    });\r\n};\r\nMobileDialogs.style = mobileDialogsCss;\n\nexport { MobileDialogs as mobile_dialogs };\n"],"sourceRoot":"webpack:///"}