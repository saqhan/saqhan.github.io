{"version":3,"sources":["webpack:///src/app/chat-navigate.service.ts","webpack:///src/app/mobile/mobile-routing.module.ts","webpack:///src/app/mobile/mobile.component.ts","webpack:///src/app/mobile/mobile.component.html","webpack:///src/app/mobile/mobile.module.ts","webpack:///src/app/mobile/res/view/contacts/contacts.component.ts","webpack:///src/app/mobile/res/view/contacts/contacts.component.html","webpack:///src/app/mobile/res/view/mobile-personal-chat/mobile-personal-chat.component.ts","webpack:///src/app/mobile/res/view/mobile-personal-chat/mobile-personal-chat.component.html","webpack:///src/app/mobile/res/view/user-profile/user-profile.component.ts","webpack:///src/app/mobile/res/view/user-profile/user-profile.component.html","webpack:///src/app/res/directive/lifecycle/lifecycle.directive.ts","webpack:///src/app/res/module/shared.module.ts"],"names":["ChatNavigateService","router","id","navigate","queryParams","contact","open","queryParamsHandling","profile","providedIn","routes","path","pathMatch","data","view","component","redirectTo","MobileRoutingModule","forChild","imports","exports","MobileComponent","storeMessage","animSRVC","activatedRoute","chatNavigateService","cdRef","showFiller","dialogs","contacts","allDialogs","categories","showDialogs","getDialogs","subscribe","dataFromSever","markForCheck","getCategories","getContacts","console","log","params","input","filterChatsByCategory","dialog","slideToLEFT","navigateToPersonalChat","navigateToContact","value","selector","templateUrl","styleUrls","changeDetection","OnPush","MobileModule","declarations","providers","schemas","ContactsComponent","allContacts","changes","filterContacts","lastSearchValue","slideToRIGHT","navigateToChats","$event","detail","place","clickToShowDialogs","clickToContact","clickToShowContacts","clickToShowMenuBar","MobilePersonalChatComponent","mobileTheme","showInputSearch","showDropDown","messages","allMessages","showProfile","startSyncMessage","getDialog","parseInt","dialogFromServer","openedDialog","setChatState","online","chatActionState","undefined","writing","chatPresenceState","offline","getMessages$","messagesFromServer","visibleProfile","message","sendTextMessage","scrollToBot","el","chatMessagesContainer","timer","nativeElement","controlChatProfile","UserProfileComponent","LifecycleDirective","afterViewInit","emit","SharedModule"],"mappings":"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","file":"mobile-mobile-module-es5.js","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\n@Injectable(\n  {\n    providedIn: \"root\"\n  }\n) export class ChatNavigateService {\n\n  constructor(\n    private router: Router\n  ) {\n  }\n\n  /**\n   * */\n  public navigateToPersonalChat (\n    id: number\n  )\n  {\n    this.router.navigate(\n      [`/chat/${id}`]\n    );\n  }\n\n  /**\n   * */\n  public navigateToContact ()\n  {\n    this.router.navigate(\n      [`/chat`],\n      {\n        queryParams: {\n          contact: open ? 'show' : null\n        },\n        queryParamsHandling: \"merge\"\n      }\n    );\n  }\n\n  /**\n   * */\n  public navigateToChats ()\n  {\n    this.router.navigate(\n      [`/chat`]\n    );\n  }\n\n  /**\n   * */\n  public controlChatProfile (\n    id: number,\n    open: boolean\n  )\n  {\n    this.router.navigate(\n      [`/chat/${id}`],\n      {\n        queryParams: {\n          profile: open ? 'show' : null\n        },\n        queryParamsHandling: \"merge\"\n      }\n    );\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MobileComponent} from \"./mobile.component\";\nimport {MobilePersonalChatComponent} from \"./res/view/mobile-personal-chat/mobile-personal-chat.component\";\n\nconst routes: Routes = [\n  {\n    path: 'chat',\n    pathMatch: 'prefix',\n    data: {\n      view: 'all-chats'\n    },\n    // runGuardsAndResolvers: \"pathParamsOrQueryParamsChange\",\n    component: MobileComponent,\n    // children: [\n    //   {\n    //     path: ':chatId',\n    //     data: {\n    //       view: 'personal'\n    //     },\n    //     component: MobileComponent,\n    //   },\n    // ]\n  },\n  {\n    path: 'chat/:chatId',\n    data: {\n      view: 'personal'\n    },\n    component: MobilePersonalChatComponent,\n  },\n  // {\n  //   path: 'contacts',\n  //   component: MobileComponent,\n  // },\n  {\n    path: '**',\n    redirectTo: 'chat'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MobileRoutingModule { }\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, SimpleChanges,} from '@angular/core';\nimport {StoreService} from '../store-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AnimationService} from '../services/common/animation.service';\nimport {\n  ChatCategoryInterface,\n  ChatContactInterface,\n  ChatDialogInterface,\n  filterDialogsBySearchValue,\n} from 'stencil-chat';\nimport {ChatNavigateService} from \"../chat-navigate.service\";\n\n@Component({\n  selector: 'app-mobile',\n  templateUrl: './mobile.component.html',\n  styleUrls: ['./mobile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MobileComponent implements OnInit {\n  showFiller = false;\n\n  /**\n   * */\n  public dialogs: ChatDialogInterface[] = [];\n\n  /**\n   * */\n  public contacts: ChatContactInterface[] = [];\n\n  /**\n   * */\n  private allDialogs: ChatDialogInterface[] = [];\n\n  /**\n   * */\n  public categories: ChatCategoryInterface[] = [];\n\n  /**\n   * */\n  public showDialogs = true;\n\n  constructor(\n    private storeMessage: StoreService,\n    private router: Router,\n    private animSRVC: AnimationService,\n    private activatedRoute: ActivatedRoute,\n    private chatNavigateService: ChatNavigateService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n\n  ngOnInit(): void {\n    this.storeMessage.getDialogs().subscribe((dataFromSever) => {\n      this.allDialogs = this.dialogs = dataFromSever;\n      this.cdRef.markForCheck();\n    });\n\n    this.storeMessage.getCategories().subscribe((dataFromSever) => {\n      this.categories = dataFromSever;\n      this.cdRef.markForCheck();\n    });\n\n    this.storeMessage.getContacts().subscribe((dataFromSever) => {\n      this.contacts = dataFromSever;\n      console.log(\n        'contacts - dataFromSever',\n        dataFromSever\n      )\n      this.cdRef.markForCheck();\n    });\n\n    this.activatedRoute.queryParams.subscribe(\n      (params) => {\n        this.showDialogs = params['contact'] !== 'show'\n      }\n    )\n  }\n\n  // клик по кнопке категорий для фильтрации диалогов\n  public clickToCategory(input: ChatCategoryInterface) {\n    this.dialogs = this.storeMessage.filterChatsByCategory(\n      input,\n      this.allDialogs\n    );\n  }\n\n  /**\n  * */\n  public cancelSearchPersonal() {\n    this.dialogs = this.allDialogs;\n  }\n\n\n  // on click dialog\n  public clickToDialog(dialog: ChatDialogInterface) {\n    this.animSRVC.slideToLEFT();\n    this.chatNavigateService.navigateToPersonalChat(\n      dialog.id\n    );\n    // this.router.navigate(['app-mobile-personal-chat']);\n  }\n\n\n  /**\n   * */\n  public clickToShowDialogs() {\n    this.animSRVC.slideToLEFT();\n    this.router.navigate(['mobile']);\n  }\n\n  /**\n   * */\n  public clickToshowDialogs() {\n    this.animSRVC.slideToLEFT();\n    this.chatNavigateService.navigateToContact();\n  }\n\n  /**\n   * */\n  public clickToShowMenuBar() {\n    console.log('clickToShowMenuBar');\n  }\n\n  /**\n   * */\n  public clickToAddDialog() {\n    console.log('clickToAddDialog');\n  }\n\n  public clickToShowContacts()\n  {\n    this.chatNavigateService.navigateToContact();\n  }\n\n  /**\n   * */\n  public searchDialogs(value: string): void {\n    this.dialogs = filterDialogsBySearchValue(\n      value,\n      this.allDialogs\n    );\n  }\n}\n","<ng-container [ngSwitch]=\"showDialogs\">\n  <div class=\"m-chat-wrapper\" *ngSwitchCase=\"true\">\n    <m-chat-header\n      [categories]=\"categories\"\n      (clickToCategory)=\"clickToCategory($event.detail)\"\n      (clickToAddDialog)=\"clickToAddDialog()\"\n      (cancelSearchPersonal)=\"cancelSearchPersonal()\"\n      (searchDialogs)=\"searchDialogs($event.detail)\"\n    ></m-chat-header>\n    <div class=\"m-chat-dialogs\">\n      <div *ngFor=\"let dialog of dialogs\">\n        <dialog-card (clickToDialog)=\"clickToDialog($event.detail)\" [mess]=\"dialog\"></dialog-card>\n      </div>\n    </div>\n    <m-chat-footer\n      (clickToShowDialogs)=\"clickToShowDialogs()\"\n      (clickToShowContacts)=\"clickToShowContacts()\"\n      (clickToShowMenuBar)=\"clickToShowMenuBar()\"\n    ></m-chat-footer>\n  </div>\n  <app-contacts [contacts]=\"contacts\" *ngSwitchCase=\"false\"></app-contacts>\n</ng-container>\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {MobileRoutingModule} from \"./mobile-routing.module\";\nimport {UserProfileComponent} from \"./res/view/user-profile/user-profile.component\";\nimport {ContactsComponent} from \"./res/view/contacts/contacts.component\";\nimport {MobilePersonalChatComponent} from \"./res/view/mobile-personal-chat/mobile-personal-chat.component\";\nimport {MobileComponent} from \"./mobile.component\";\nimport {SharedModule} from \"../res/module/shared.module\";\n\n@NgModule({\n  declarations: [\n    UserProfileComponent,\n    MobilePersonalChatComponent,\n    ContactsComponent,\n    MobileComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MobileRoutingModule,\n  ],\n  providers: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MobileModule {}\n","import {Component, Input, OnInit, SimpleChanges} from '@angular/core';\nimport { StoreService } from '../../../../store-service.service';\nimport { Router } from '@angular/router';\nimport { AnimationService } from '../../../../services/common/animation.service';\nimport {ChatContactInterface, filterContactBySearchValue} from \"stencil-chat\";\nimport {ChatNavigateService} from \"../../../../chat-navigate.service\";\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss'],\n})\nexport class ContactsComponent implements OnInit {\n  @Input() contacts: ChatContactInterface[] = [];\n\n  /**\n   * */\n  public allContacts: ChatContactInterface[] = [];\n\n  /**\n   *\n   */\n  public lastSearchValue: string;\n\n  constructor(\n    private storeMessage: StoreService,\n    private router: Router,\n    private chatNavigateService: ChatNavigateService,\n    private animSRVC: AnimationService\n  ) {}\n\n\n  ngOnInit(): Promise<void> | void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.allContacts = this.contacts;\n    this.filterContacts(this.lastSearchValue);\n  }\n\n  // public getContacts() {\n  //   return this.contacts;\n  // }\n  public clickToShowDialogs() {\n    this.animSRVC.slideToRIGHT();\n    this.chatNavigateService.navigateToChats();\n  }\n  public clickToShowContacts(){\n    this.animSRVC.slideToLEFT();\n    // this.router.navigate(['contacts']);\n  }\n  public clickToShowMenuBar(){\n    console.log('clickToShowMenuBar');\n  }\n\n  public clickToContact($event) {\n    console.log('clickToContact', $event);\n    this.animSRVC.slideToLEFT();\n    // this.router.navigate(['app-mobile-personal-chat']);\n  }\n\n  // клик по ссылке\n  public clickToLink({ detail }) {\n    if (detail.place === 'showDialogs') {\n      this.animSRVC.slideToRIGHT();\n      // this.router.navigate(['mobile']);\n    }\n    if (detail.place === 'clickToContact') {\n      this.animSRVC.slideToLEFT();\n      // this.router.navigate(['app-mobile-personal-chat']);\n    }\n  }\n\n  /**\n   *\n   * */\n  public filterContacts(\n    value: string\n  ) {\n    this.contacts = filterContactBySearchValue(\n      value,\n      this.allContacts\n    )\n  }\n\n  // Поиск контактов\n\n  // public searchContact({detail}) {\n  //   console.log('searchMessage 1 ', detail.data);\n  //   return (this.messages =\n  //     detail.data !== '' && detail.data !== null\n  //       ? this.messages\n  //         .filter((item) => {\n  //           return (typeof item.content === 'string' )\n  //             ? (item.content).toLowerCase().includes(detail.data.toLowerCase())\n  //             : false;\n  //         } )\n  //       : this.storeMessage.getMessages() );\n  // }\n}\n","<div class=\"contacts-list-wrapper\">\n  <contacts-list-header\n    (clickToShowDialogs)=\"clickToShowDialogs()\"\n    (searchContact)=\"filterContacts($event.detail)\"\n  ></contacts-list-header>\n  <contacts-list-body\n    [contacts]=\"contacts\"\n    (clickToContact)=\"clickToContact($event)\"\n\n  ></contacts-list-body>\n  <m-chat-footer\n    (clickToShowDialogs)=\"clickToShowDialogs()\"\n    (clickToShowContacts)=\"clickToShowContacts()\"\n    (clickToShowMenuBar)=\"clickToShowMenuBar()\"\n  ></m-chat-footer>\n</div>\n","import {ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {StoreService} from '../../../../store-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AnimationService} from '../../../../services/common/animation.service';\nimport {ChatNavigateService} from \"../../../../chat-navigate.service\";\nimport {\n  ChatCategoryInterface,\n  ChatDialogInterface,\n  ChatMessage,\n  ChatUserActionStatusState,\n  ChatUserPresenceState, filterMessageBySearchValue,\n  scrollToBot\n} from \"stencil-chat\";\nimport {ChatViewEnum} from \"../../../../comp/res/enum/common.enum\";\n\n@Component({\n  selector: 'app-mobile-personal-chat',\n  templateUrl: './mobile-personal-chat.component.html',\n  styleUrls: ['./mobile-personal-chat.component.scss'],\n})\nexport class MobilePersonalChatComponent implements OnInit {\n  @ViewChild('chatMessagesContainer') chatMessagesContainer: ElementRef<HTMLElement>;\n\n  /**\n   * */\n  public mobileTheme = 'mobile';\n\n  /**\n   * */\n  public showInputSearch = false;\n\n  /**\n   * */\n  public showDropDown = false;\n\n  /**\n   * */\n  public messages: ChatMessage[] = [];\n\n  /**\n   * */\n  public allMessages: ChatMessage[] = [];\n\n  /**\n   *\n   */\n  public chatActionState: ChatUserActionStatusState;\n\n  /**\n   *\n   */\n  public chatPresenceState: ChatUserPresenceState;\n\n  /**\n   * */\n  public openedDialog: ChatDialogInterface;\n\n  /**\n   * */\n  public showProfile = true;\n\n\n  /**\n   * */\n  public categories: ChatCategoryInterface[] = [];\n\n  constructor(\n    private storeMessage: StoreService,\n    private chatNavigateService: ChatNavigateService,\n    private router: Router,\n    private animSRVC: AnimationService,\n    private cdRef: ChangeDetectorRef,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.startSyncMessage();\n\n    this.storeMessage.getCategories().subscribe((dataFromSever) => {\n      this.categories = dataFromSever;\n      this.cdRef.markForCheck();\n    });\n\n\n    this.activatedRoute.queryParams.subscribe(\n      (params) => {\n        this.showProfile = params['profile'] === 'show'\n        this.cdRef.markForCheck();\n      }\n    )\n\n    this.activatedRoute.params.subscribe(\n      (params) => {\n        if (params['chatId']) {\n          this.storeMessage.getDialog(parseInt(params['chatId'] , 10)).subscribe(\n            (dialogFromServer) => {\n              if (dialogFromServer) {\n                this.openedDialog = dialogFromServer;\n                this.setChatState(dialogFromServer.online);\n                this.cdRef.markForCheck();\n              }\n            }\n          )\n        }\n      }\n    )\n  }\n\n  /**\n   * */\n  private setChatState (\n    online: boolean\n  )\n  {\n    this.chatActionState = !online ? undefined : ChatUserActionStatusState.writing;\n    this.chatPresenceState = this.chatActionState !== undefined ? ChatUserPresenceState.online : ChatUserPresenceState.offline;\n  }\n\n  public startSyncMessage (): void\n  {\n    this.storeMessage.getMessages$().subscribe(\n      (messagesFromServer) => {\n        this.messages = this.allMessages =  messagesFromServer;\n        this.cdRef.markForCheck();\n      }\n    )\n  }\n\n  public chatConvertWritingStatusToMessage() {\n    // return chatConvertWritingStatusToMessage(this.getWriting[0]);\n  }\n\n  getMessages() {\n    return this.messages;\n  }\n\n  public onClickMenuDots() {\n    this.showDropDown = !this.showDropDown;\n  }\n\n  public turnOffShowInputSearch() {\n    this.showInputSearch = false;\n  }\n  /**\n   * переключение показа инпута поиски в личных сообщениях\n   **/\n  public toggleShowInputSearch() {\n    this.showInputSearch = !this.showInputSearch;\n    this.showDropDown = false;\n  }\n\n  public cancelSearchPersonal() {\n    // this.messages = this.storeMessage.getMessages$();\n  }\n\n  public clickToShowDialogs() {\n    this.animSRVC.slideToRIGHT();\n    this.chatNavigateService.navigateToChats();\n  }\n\n  public clickToUserProfile() {\n    this.animSRVC.slideToLEFT();\n    this.visibleProfile(true);\n    // this.router.navigate(['profile']);\n  }\n\n  /**\n   * Поиск сообщений\n   * @param detail\n   */\n  public searchPersonalMessage(value: string) {\n    this.messages = filterMessageBySearchValue(\n      value,\n      this.allMessages\n    );\n  }\n\n  /**\n   * Сброс поика сообщений\n   */\n  public resetMessagesFilter() {\n    this.messages = this.allMessages;\n  }\n\n  // клик по ссылке\n  public clickToLink({ detail }) {\n    console.log('clickToLinkBack', detail);\n    if (detail.place === 'showDialogs') {\n      this.animSRVC.slideToRIGHT();\n      this.router.navigate(['mobile']);\n    }\n    if (detail.place === 'user-name-personal') {\n      this.animSRVC.slideToLEFT();\n      this.router.navigate(['profile']);\n    }\n  }\n\n  public searchContact({ detail }) {\n    // console.log('searchMessage 1 ', detail.data);\n    return [];\n    // return (this.messages =\n    //   detail.data !== '' && detail.data !== null\n    //     ? this.messages.filter((item) => {\n    //         return typeof item.content === 'string'\n    //           ? item.content.toLowerCase().includes(detail.data.toLowerCase())\n    //           : false;\n    //       })\n    //     : this.storeMessage.getMessages$());\n  }\n\n\n  /**\n   * */\n  public sendTextMessage (\n    message: string\n  )\n  {\n    this.storeMessage.sendTextMessage(\n      message\n    );\n    this.scrollToBot();\n  }\n\n  /**\n   *\n   * */\n  public scrollToBot (\n    el = this.chatMessagesContainer,\n    timer = 50\n  )\n  {\n    scrollToBot(\n      el.nativeElement,\n      {\n        timer: timer\n      }\n    )\n  }\n\n  /**\n   * Показ профиля юзера\n   * @param detail\n   */\n  public visibleProfile(\n    open: boolean\n  ) {\n    this.chatNavigateService.controlChatProfile(\n      this.openedDialog.id,\n      open\n    );\n  }\n}\n","<ng-container [ngSwitch]=\"showProfile\">\n  <div class=\"personal-wrapper\" *ngSwitchCase=\"false\">\n    <personal-header\n      [chatActionState]=\"this.chatActionState\"\n      [chatPresenceState]=\"this.chatPresenceState\"\n      [openedDialog]=\"openedDialog\"\n      (searchContact)=\"searchContact($event)\"\n      (clickToShowDialogs)=\"clickToShowDialogs()\"\n      (clickToUserProfile)=\"clickToUserProfile()\"\n      (searchPersonalMessages)=\"searchPersonalMessage($event.detail)\"\n      (cancelSearchPersonal)=\"resetMessagesFilter()\"\n    ></personal-header>\n    <div class=\"mobile\">\n      <div class=\"personal-message\">\n        <div class=\"personal-message-inner\" #chatMessagesContainer lifecycle (afterViewInit)=\"this.scrollToBot($event.el)\">\n          <div *ngFor=\"let message of getMessages()\">\n            <message-from [message]=\"message\"></message-from>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--  <personal-message [message]=\"getMessages()\"></personal-message>-->\n    <personal-footer (sendTextMessage)=\"sendTextMessage($event.detail)\" [theme]=\"mobileTheme\"></personal-footer>\n  </div>\n\n  <s-adam-profile *ngSwitchCase=\"true\" (clickToShowDialogs)=\"visibleProfile(false)\" (clickToShowFolders)=\"null\" theme=\"mobile\" [categories]=\"categories\"></s-adam-profile>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StoreService } from '../../../../store-service.service';\nimport { AnimationService } from '../../../../services/common/animation.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent implements OnInit {\n  constructor(\n    private storeMessage: StoreService,\n    private router: Router,\n    private animSRVC: AnimationService\n  ) {}\n\n  ngOnInit(): void {}\n  // клик по ссылке\n  public clickToShowDialogs({ detail }) {\n    this.animSRVC.slideToRIGHT();\n    this.router.navigate(['app-mobile-personal-chat']);\n  }\n}\n","<user-profile\n  (clickToShowDialogs)=\"clickToShowDialogs($event)\"\n></user-profile>\n","import {AfterViewInit, Directive, ElementRef, EventEmitter, Output} from '@angular/core';\n\n@Directive({\n  selector: '[lifecycle]'\n})\nexport class LifecycleDirective  implements AfterViewInit{\n\n  @Output('afterViewInit') afterViewInit: EventEmitter<{el: ElementRef}> = new EventEmitter();\n\n  constructor(\n    private el: ElementRef\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.afterViewInit.emit(\n      {\n        el: this.el\n      }\n    );\n  }\n\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {LifecycleDirective} from \"../directive/lifecycle/lifecycle.directive\";\n\n@NgModule({\n  declarations: [\n    LifecycleDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LifecycleDirective\n  ],\n  providers: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SharedModule {\n\n}\n"]}